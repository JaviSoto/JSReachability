{"body":"## JSReachability\r\nEasy to use iOS class to asynchronously monitor the reachability of a host.\r\n\r\nThis allows you to **know at any given time** not only **whether the iPhone / iPad is connected to the internet**, but also if that connection is working.\r\nYou can check for the *reachability* of internet in general, or of your own backend server, and that way you can **detect also if the API the app connects to is down**.\r\n\r\n## Usage\r\n- **Get a reachability object** calling the class method:\r\n\r\n```objc\r\nJSReachability *reachability = [[JSReachability reachabilityWithHost:@\"myhost.com\" delegate:self] retain];\r\n```\r\n\r\nor if you don't want to specify a host:\r\n\r\n```objc\r\nJSReachability *reachability = [[JSReachability reachabilityForInternetConnectionWithDelegate:self] retain];\r\n```\r\n\r\n- You can **pass nil as the delegate**, and register to changes to changes in the reachability to the host **using the ```NSNotificationCenter```**:\r\n\r\n```\r\nextern NSString * const kJSReachabilityHostReachabilityDidChangeNotification;\r\n```\r\n\r\nlike this:\r\n\r\n```objc\r\n[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(hostReachabilityChanged:) name:kJSReachabilityHostReachabilityDidChangeNotification object:reachability];\r\n```\r\n\r\nand then implement the method to check the new value:\r\n\r\n```objc\r\n- (void)hostReachabilityChanged:(NSNotification *)note\r\n{\r\n\tJSReachability *reachability = note.object;\r\n\r\n\tBOOL hostIsReachable = reachability.hostIsReachable;\r\n\r\n\t// Do something with hostIsReachable\r\n}\r\n```\r\n\r\n- Or **pass ```self``` as the delegate** and implement this method from the ```JSReachabilityDelegate``` protocol:\r\n\r\n```objc\r\n- (void)reachability:(JSReachability *)reachability host:(NSString *)host didBecomeReachable:(BOOL)reachable;\r\n```\r\n\r\n- Then **call start** and it will start monitoring **asynchronously** the host to check for changes in the reachability (for example, if the device internet connectivity goes up or down)\r\n\r\n```objc\r\n[reachability start];\r\n```\r\n\r\n## Dependencies\r\nJSReachability requires your application to be linked against the ```SystemConfiguration.framework``` framework.\r\n\r\n## ARC Support\r\n```JSReachability``` doesn't support ARC at the moment. If you want to integrate it in your ARC project, simply add the ```-fno-objc-arc``` linker option to the ```JSReachability.m``` file. [Quick tutorial](http://maniacdev.com/2012/01/easily-get-non-arc-enabled-open-source-libraries-working-in-arc-enabled-projects/)\r\n\r\n## License\r\nCopyright 2012 [Javier Soto](http://twitter.com/javisoto) (ios@javisoto.es)\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\n limitations under the License. \r\n\r\nAttribution is not required, but appreciated.","name":"JSReachability","tagline":"Easy to use iOS class to asynchronously monitor the internet connectivity and reachability of a host.","google":" UA-30545231-1","note":"Don't delete this file! It's used internally to help with page regeneration."}